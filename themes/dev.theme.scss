$primary: #3f47cb;

$background-color: 'background-color';
$background1-color: 'background1-color';
$border-color: 'border-color';
$border2-color: 'border2-color';
$contrast-color: 'contrast-color';
$normal-background-color: 'normal-background-color';
$player-disc-background-color: 'player-disc-background-color';
$player-disc-border-color: 'player-disc-border-color';
$primary-color: 'primary-color';
$primary-light-color: 'primary-light-color';

$themes: (
  light: (
    background-color: lighten($primary, 43%),
    background1-color: lighten($primary, 45%),
    border-color: #c4c5ca,
    border2-color: #e8e9ea,
    contrast-color: #343a40,
    normal-background-color: #f8f9fa,
    player-disc-background-color: #343a40,
    player-disc-border-color: #f8f9fa,
    primary-color: $primary,
    primary-light-color: lighten($primary, 15%)
  ),
  dark: (
    background-color: lighten($primary, 43%),
    background1-color: lighten($primary, 45%),
    border-color: #c4c5ca,
    border2-color: #e8e9ea,
    contrast-color: #343a40,
    normal-background-color: #f8f9fa,
    player-disc-background-color: #343a40,
    player-disc-border-color: #f8f9fa,
    primary-color: $primary,
    primary-light-color: lighten($primary, 15%)
  )
);

@mixin dynamic-theme() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;

      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');

        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value
          )
        ) !global;
      }

      @content;
      $theme-map: null !global;
    }
  }
}

@function theme($key) {
  @return map-get($theme-map, $key);
}
